location='https://github.com/EvansDataScience/data/raw/master/'
file='eduwa.rda'
link=paste0(location,file) #The command paste0 is just combining pasting with both strings. those strings become the link
#getting the data TABLE from the file in the cloud:
load(file=url(link))
names(eduwa)
# this 'width = 70,strict.width='cut' means
# you do not want to see more than 70 characters per row.
str(eduwa,width = 70,strict.width='cut')
ead(eduwa$LocaleType,20) #first twenty values
head(eduwa$LocaleType,20) #first twenty values
# absolute values
absoluteT=table(eduwa$LocaleType,
exclude = 'nothing') #include all values!
#here you are:
absoluteT
# relative values
prop.table(absoluteT)
names(absoluteT)[5]='Unknown'
propT=prop.table(absoluteT)*100
#you get
propT
#the pie plots the table:
pie(absoluteT)
#load ggplot
library(ggplot2)
# as data frame
(tableFreq=as.data.frame(absoluteT))
#renaming data frame columns.
names(tableFreq)=c("Locale","Count")
#adding percents
#add as.vector so ggplot doesn't complain later
tableFreq$Percent=as.vector(propT)
#then you have:
tableFreq
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = Locale,
y = Count))
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = Locale,
y = Count))
plot1 = base + geom_bar(fill = "gray",
stat = 'identity')
plot1 = base + geom_bar(fill = "gray",
stat = 'identity')
plot1
#adding titles
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
#adding titles
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
base= ggplot(data = tableFreq,
aes(x = Locale,
y = Percent))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity')
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
base= ggplot(data = tableFreq,
aes(x = Locale,
y = Percent))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity')
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot4 = plot3 +geom_hline(yintercept = 10, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot4
base= ggplot(data = tableFreq,
aes(x = Locale,
y = Percent))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity')
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales) # for "unit_format""
#customize Y axis
plot4 = plot3 +
scale_y_continuous(breaks=c(0,10, 25,40),
limits = c(0, 40),
labels=unit_format(suffix = '%'))
plot4
#positions: 0 left / 1 right / 0.5 center
plot5 = plot4 +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
plot5
paste0(round(tableFreq$Percent,2), '%')
# createing labels:
LABELS=paste0(round(tableFreq$Percent,2), '%')
###
plot6 = plot5 + geom_text(vjust=0, #hjust if flipping
size = 5,
aes(y = Percent ,
label = LABELS))
plot6# + coord_flip() # wanna flip the plot?
# createing labels:
LABELS=paste0(round(tableFreq$Percent,2), '%')
###
plot6 = plot5 + geom_text(vjust=0, #hjust if flipping
size = 5,
aes(y = Percent ,
label = LABELS))
plot6 + coord_flip() # wanna flip the plot?
# createing labels:
LABELS=paste0(round(tableFreq$Percent,2), '%')
###
plot6 = plot5 + geom_text(vjust=0, #hjust if flipping
size = 5,
aes(y = Percent ,
label = LABELS))
plot6#+ coord_flip() # wanna flip the plot?
tableFreq=tableFreq[order(tableFreq$Percent),]
# then:
tableFreq
(localesOrd=tableFreq[order(tableFreq$Percent),'Locale'])
# redo:
LABELS=paste0(round(tableFreq$Percent,2), '%')
base= ggplot(data = tableFreq,
aes(x = Locale,y = Percent))
## adding these to base
base= base + scale_x_discrete(limits=localesOrd)
base= base + theme_classic()
##
plot1 = base + geom_bar(fill ="gray",
stat = 'identity')
plot2 = plot1 + labs(title=titleText,
x =NULL,
y = NULL,
caption = sourceText)
plot3 = plot2 + geom_hline(yintercept = 25,
linetype="dashed",
size=1.5,
alpha=0.5)
plot4 = plot3 + scale_y_continuous(breaks=c(0,25,50),
limits = c(0, 50),
# expand = c(0, 0), #try?
labels=unit_format(suffix = '%'))
plot5 = plot4 + theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
plot6 = plot5 + geom_text(vjust=0, #hjust if flipping
size = 6,#fontface = "bold",
aes(y = Percent,
label = LABELS))
plot6 #+ coord_flip() # wanna flip the plot?
help("scale_x_discrete")
#familiar
base = ggplot(tableFreq, aes(Locale,Percent))
#by default, with aes, first value is X, second value is y.
base = base + theme_classic()
base = base + scale_x_discrete(limits=localesOrd)
#new:geom_segment
lolliplot1=base + geom_segment(aes(y = 0,
x = Locale,
yend = Percent,
xend = Locale),
color = "grey50")
lolliplot1
help(geom_segment)
lolliplot2=lolliplot1 + geom_point(size=5)
lolliplot2
# new variable
tableFreq$gap=tableFreq$Percent-25
tableFreq
base = ggplot(tableFreq, aes(x=Locale,
y=gap)) #change
base = base + theme_classic()
base = base + scale_x_discrete(limits=localesOrd)
lolliplot1=base + geom_segment(aes(y = 0,
yend = gap, #change
x = Locale,
xend = Locale),
color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2
# a new column for color
tableFreq$PositiveGap=ifelse(tableFreq$gap>0,"Yes","No")
tableFreq
# add new aesthetics 'color'
base = ggplot(tableFreq, aes(x=Locale,
y=gap,
color=PositiveGap))#here
base = base + theme_classic()
base= base + scale_x_discrete(limits=localesOrd)
lolliplot1=base + geom_segment(aes(y = 0,
yend = gap,
x = Locale,
xend = Locale),
color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2
base = ggplot(tableFreq, aes(x=Locale,y=gap,
color=PositiveGap,
label = round(gap,3))) #label
base = base + theme_classic()
base= base + scale_x_discrete(limits=localesOrd)
lolliplot1=base + geom_segment(aes(y = 0, yend = gap,
x = Locale, xend = Locale),
color = "gray")
lolliplot2=lolliplot1 + geom_point()
lolliplot2 + geom_text()
lolliplot3= lolliplot2 + geom_text(nudge_x=0.3,#to the right
show.legend = FALSE)
lolliplot3
lolliplot3= lolliplot2 + geom_text(nudge_x=0.4,#to the right
show.legend = FALSE)
lolliplot3
lolliplot3= lolliplot2 + geom_text(nudge_x=0.5,#to the right
show.legend = FALSE)
lolliplot3
lolliplot4 = lolliplot3 + geom_hline(yintercept = 0)
lolliplot4
# calling "element_blank()"
lolliplot5 = lolliplot4 + theme(axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank())
lolliplot5
lolliplot8 = lolliplot7 +  geom_label(aes(label=localesOrd),
color ='black ',
size =3,
y=0,
show.legend = FALSE ) +
theme(axis.text.x = element_blank())
# more "element_blank()"
lolliplot6=lolliplot5 + theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.line.x = element_blank()
)
lolliplot6
lolliplot8 = lolliplot7 +  geom_label(aes(label=localesOrd),
color ='black ',
size =3,
y=0,
show.legend = FALSE ) +
theme(axis.text.x = element_blank())
lolliplot7= lolliplot6 + theme(legend.position = c(0.8,0.4),
legend.background = element_rect(fill='grey95'))
lolliplot7
lolliplot8 = lolliplot7 +  geom_label(aes(label=localesOrd),
color ='black ',
size =3,
y=0,
show.legend = FALSE ) +
theme(axis.text.x = element_blank())
lolliplot8
table(eduwa$High.Grade,exclude = 'nothing')
frqTabO=as.data.frame(prop.table(table(eduwa$High.Grade)))
names(frqTabO)=c('grade','pct')
frqTabO
base = ggplot(frqTabO,aes(x=grade,y=pct))
base + geom_bar(stat = 'identity')
# boxplots do not use frequency tables
# "as.numeric" produces turns levels of the factor into numbers
basebox1 = ggplot(eduwa, aes(y=as.numeric(High.Grade)))
box1 = basebox1 + geom_boxplot() + coord_flip() # to show it horizontally
box1
# the labels use the original ordinal levels
ordLabels= levels(eduwa$High.Grade)
box2 = box1 + scale_y_continuous(labels=ordLabels,breaks=1:15)
box2
summary(eduwa$Free.Lunch)
eduwa$Free.LunchGroup=cut(eduwa$Free.Lunch,
breaks = c(0,100, 250, 500,1000,2000),
labels = c("100 and below","101-250","251-500","501-1000","1001 and above"))
table(eduwa$Free.LunchGroup)
